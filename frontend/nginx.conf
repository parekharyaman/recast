worker_processes auto;

events {
    worker_connections 1024;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;
    charset       utf-8;

    # Hide version & tighten defaults
    server_tokens off;
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 4096;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/access.log main;
    error_log  /var/log/nginx/error.log warn;

    # Compression (runtime gzip)
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_comp_level 6;
    gzip_proxied any;
    gzip_types
        text/plain
        text/css
        text/xml
        application/xml
        application/xml+rss
        application/atom+xml
        application/json
        application/javascript
        application/wasm
        image/svg+xml;

    # --- Security headers (global) ---
    add_header X-Frame-Options "DENY" always;                   # prevent clickjacking
    add_header X-XSS-Protection "1; mode=block" always;         # legacy, harmless
    add_header X-Content-Type-Options "nosniff" always;          # no MIME sniffing
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Cross-Origin-Opener-Policy "same-origin" always;
    add_header Cross-Origin-Resource-Policy "same-origin" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;

    # Content Security Policy tuned for Vite production output
    # (no eval, allow self assets, inline styles for <link rel="stylesheet"> preloads)
    add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob:; font-src 'self' data:; connect-src 'self' https: wss:; frame-ancestors 'none'; base-uri 'self'" always;


    # Redirect HTTP to HTTPS for app.withretake.com
    # HTTPS server (serves built Vite assets)
    server {
        listen  80;
        server_name app.withretake.com;

        # HSTS
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

        # Serve the Vite build output
        root  /usr/share/nginx/html;
        index index.html;

        # Health check (optional)
        location = /healthz { return 200; }

        # Favor SPA routing: real files first, else index.html
        location / {
            try_files $uri $uri/ /index.html;
        }

        # Do not log missing favicon/robots
        location = /favicon.ico { log_not_found off; access_log off; }
        location = /robots.txt  { log_not_found off; access_log off; }

        # Cache aggressively for hashed assets generated by Vite (e.g., /assets/*)
        location ^~ /assets/ {
            # Vite emits content-hashed filenames -> safe to cache long
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri =404;
        }

        # Cache common static types at the root as well (images, fonts)
        location ~* \.(?:css|js|mjs|png|jpg|jpeg|gif|webp|ico|svg|ttf|otf|woff|woff2)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            try_files $uri =404;
        }

        # Short cache for HTML so deployments propagate quickly
        location = /index.html {
            expires -1;
            add_header Cache-Control "no-cache";
        }

        # Upload size (tune if the app needs larger payloads)
        client_max_body_size 10m;
    }
}
